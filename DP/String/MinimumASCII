class Solution {
    public int minimumDeleteSum(String s1, String s2) {
        int sum = 0;
        int[][] memo = new int[s1.length()][s2.length()];
        for (int i = 0; i < s1.length(); i++) {
            sum += (int) s1.charAt(i);
            Arrays.fill(memo[i], -1);
        } 
        for (int j = 0; j < s2.length(); j++) sum += (int) s2.charAt(j);        
        int val = dfs(s1, s1.length() - 1, s2, s2.length() - 1, memo);
        return sum - val * 2;
    }
    
    public int dfs(String s1, int i, String s2, int j, int[][] memo) {
        if (i == -1 || j == -1) {
            return 0;
        }
        if (memo[i][j] != -1) return memo[i][j];
        if (s1.charAt(i) == s2.charAt(j)) {
            memo[i][j] = dfs(s1, i - 1, s2, j - 1, memo) + (int) s1.charAt(i);
        } else {
            memo[i][j] = Math.max(dfs(s1, i - 1, s2, j, memo), dfs(s1, i, s2, j - 1, memo));
        }
        return memo[i][j];
    }
}
